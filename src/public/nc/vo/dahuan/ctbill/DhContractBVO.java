/***************************************************************\
 *     The skeleton of this class is generated by an automatic *
 * code generator for NC product. It is based on Velocity.     *
\***************************************************************/
package nc.vo.dahuan.ctbill;

import java.util.ArrayList;
import nc.vo.pub.*;
import nc.vo.pub.lang.*;

/**
 * <b> 在此处简要描述此类的功能 </b>
 * 
 * <p>
 * 在此处添加此类的描述信息
 * </p>
 * 
 * 创建日期:2013-10-14
 * 
 * @author ${vmObject.author}
 * @version Your Project 1.0
 */
public class DhContractBVO extends SuperVO {

	public String pk_contract;
	public String vggxh;
	public String vdef4;
	public String invcode;
	public String invname;
	public String vdef7;
	public String vdef3;
	public String vdef9;

	public UFDate dghsj;
	public String vdef8;
	public String pk_danw;
	public String vmen;
	public String pk_invbasdoc;
	public String vdef2;
	public UFDouble djprice;
	public UFDouble djetotal;
	public String vdef6;
	public String vdef10;
	public UFDouble nnumber;
	public String vdef1;
	public String vdef5;
	public String pk_contract_b;
	
	public UFDouble currenty_amount;
	public UFDouble curr_amount_sum;

	public static final String PK_CONTRACT = "pk_contract";
	public static final String VGGXH = "vggxh";
	public static final String VDEF4 = "vdef4";
	public static final String INVCODE = "invcode";
	public static final String VDEF7 = "vdef7";
	public static final String VDEF3 = "vdef3";
	public static final String VDEF9 = "vdef9";
	public static final String DGHSJ = "dghsj";
	public static final String VDEF8 = "vdef8";
	public static final String PK_DANW = "pk_danw";
	public static final String VMEN = "vmen";
	public static final String PK_INVBASDOC = "pk_invbasdoc";
	public static final String VDEF2 = "vdef2";
	public static final String DJPRICE = "djprice";
	public static final String DJETOTAL = "djetotal";
	public static final String VDEF6 = "vdef6";
	public static final String VDEF10 = "vdef10";
	public static final String NNUMBER = "nnumber";
	public static final String VDEF1 = "vdef1";
	public static final String VDEF5 = "vdef5";
	public static final String PK_CONTRACT_B = "pk_contract_b";

	
	
	
	public UFDouble getCurr_amount_sum() {
		return curr_amount_sum;
	}

	public void setCurr_amount_sum(UFDouble curr_amount_sum) {
		this.curr_amount_sum = curr_amount_sum;
	}

	public UFDouble getCurrenty_amount() {
		return currenty_amount;
	}

	public void setCurrenty_amount(UFDouble currenty_amount) {
		this.currenty_amount = currenty_amount;
	}

	public String getInvname() {
		return invname;
	}

	public void setInvname(String invname) {
		this.invname = invname;
	}

	/**
	 * 属性pk_contract的Getter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @return String
	 */
	public String getPk_contract() {
		return pk_contract;
	}

	/**
	 * 属性pk_contract的Setter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @param newPk_contract
	 *            String
	 */
	public void setPk_contract(String newPk_contract) {

		pk_contract = newPk_contract;
	}

	/**
	 * 属性vggxh的Getter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @return String
	 */
	public String getVggxh() {
		return vggxh;
	}

	/**
	 * 属性vggxh的Setter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @param newVggxh
	 *            String
	 */
	public void setVggxh(String newVggxh) {

		vggxh = newVggxh;
	}

	/**
	 * 属性vdef4的Getter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @return String
	 */
	public String getVdef4() {
		return vdef4;
	}

	/**
	 * 属性vdef4的Setter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @param newVdef4
	 *            String
	 */
	public void setVdef4(String newVdef4) {

		vdef4 = newVdef4;
	}

	/**
	 * 属性invcode的Getter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @return String
	 */
	public String getInvcode() {
		return invcode;
	}

	/**
	 * 属性invcode的Setter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @param newInvcode
	 *            String
	 */
	public void setInvcode(String newInvcode) {

		invcode = newInvcode;
	}

	/**
	 * 属性vdef7的Getter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @return String
	 */
	public String getVdef7() {
		return vdef7;
	}

	/**
	 * 属性vdef7的Setter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @param newVdef7
	 *            String
	 */
	public void setVdef7(String newVdef7) {

		vdef7 = newVdef7;
	}

	/**
	 * 属性vdef3的Getter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @return String
	 */
	public String getVdef3() {
		return vdef3;
	}

	/**
	 * 属性vdef3的Setter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @param newVdef3
	 *            String
	 */
	public void setVdef3(String newVdef3) {

		vdef3 = newVdef3;
	}

	/**
	 * 属性vdef9的Getter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @return String
	 */
	public String getVdef9() {
		return vdef9;
	}

	/**
	 * 属性vdef9的Setter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @param newVdef9
	 *            String
	 */
	public void setVdef9(String newVdef9) {

		vdef9 = newVdef9;
	}

	/**
	 * 属性dghsj的Getter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @return UFDate
	 */
	public UFDate getDghsj() {
		return dghsj;
	}

	/**
	 * 属性dghsj的Setter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @param newDghsj
	 *            UFDate
	 */
	public void setDghsj(UFDate newDghsj) {

		dghsj = newDghsj;
	}

	/**
	 * 属性vdef8的Getter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @return String
	 */
	public String getVdef8() {
		return vdef8;
	}

	/**
	 * 属性vdef8的Setter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @param newVdef8
	 *            String
	 */
	public void setVdef8(String newVdef8) {

		vdef8 = newVdef8;
	}

	/**
	 * 属性pk_danw的Getter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @return String
	 */
	public String getPk_danw() {
		return pk_danw;
	}

	/**
	 * 属性pk_danw的Setter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @param newPk_danw
	 *            String
	 */
	public void setPk_danw(String newPk_danw) {

		pk_danw = newPk_danw;
	}

	/**
	 * 属性vmen的Getter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @return String
	 */
	public String getVmen() {
		return vmen;
	}

	/**
	 * 属性vmen的Setter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @param newVmen
	 *            String
	 */
	public void setVmen(String newVmen) {

		vmen = newVmen;
	}

	/**
	 * 属性pk_invbasdoc的Getter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @return String
	 */
	public String getPk_invbasdoc() {
		return pk_invbasdoc;
	}

	/**
	 * 属性pk_invbasdoc的Setter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @param newPk_invbasdoc
	 *            String
	 */
	public void setPk_invbasdoc(String newPk_invbasdoc) {

		pk_invbasdoc = newPk_invbasdoc;
	}

	/**
	 * 属性vdef2的Getter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @return String
	 */
	public String getVdef2() {
		return vdef2;
	}

	/**
	 * 属性vdef2的Setter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @param newVdef2
	 *            String
	 */
	public void setVdef2(String newVdef2) {

		vdef2 = newVdef2;
	}

	/**
	 * 属性djprice的Getter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @return UFDouble
	 */
	public UFDouble getDjprice() {
		return djprice;
	}

	/**
	 * 属性djprice的Setter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @param newDjprice
	 *            UFDouble
	 */
	public void setDjprice(UFDouble newDjprice) {

		djprice = newDjprice;
	}

	/**
	 * 属性djetotal的Getter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @return UFDouble
	 */
	public UFDouble getDjetotal() {
		return djetotal;
	}

	/**
	 * 属性djetotal的Setter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @param newDjetotal
	 *            UFDouble
	 */
	public void setDjetotal(UFDouble newDjetotal) {

		djetotal = newDjetotal;
	}

	/**
	 * 属性vdef6的Getter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @return String
	 */
	public String getVdef6() {
		return vdef6;
	}

	/**
	 * 属性vdef6的Setter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @param newVdef6
	 *            String
	 */
	public void setVdef6(String newVdef6) {

		vdef6 = newVdef6;
	}

	/**
	 * 属性vdef10的Getter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @return String
	 */
	public String getVdef10() {
		return vdef10;
	}

	/**
	 * 属性vdef10的Setter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @param newVdef10
	 *            String
	 */
	public void setVdef10(String newVdef10) {

		vdef10 = newVdef10;
	}

	/**
	 * 属性nnumber的Getter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @return UFDouble
	 */
	public UFDouble getNnumber() {
		return nnumber;
	}

	/**
	 * 属性nnumber的Setter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @param newNnumber
	 *            UFDouble
	 */
	public void setNnumber(UFDouble newNnumber) {

		nnumber = newNnumber;
	}

	/**
	 * 属性vdef1的Getter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @return String
	 */
	public String getVdef1() {
		return vdef1;
	}

	/**
	 * 属性vdef1的Setter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @param newVdef1
	 *            String
	 */
	public void setVdef1(String newVdef1) {

		vdef1 = newVdef1;
	}

	/**
	 * 属性vdef5的Getter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @return String
	 */
	public String getVdef5() {
		return vdef5;
	}

	/**
	 * 属性vdef5的Setter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @param newVdef5
	 *            String
	 */
	public void setVdef5(String newVdef5) {

		vdef5 = newVdef5;
	}

	/**
	 * 属性pk_contract_b的Getter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @return String
	 */
	public String getPk_contract_b() {
		return pk_contract_b;
	}

	/**
	 * 属性pk_contract_b的Setter方法.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @param newPk_contract_b
	 *            String
	 */
	public void setPk_contract_b(String newPk_contract_b) {

		pk_contract_b = newPk_contract_b;
	}

	/**
	 * 验证对象各属性之间的数据逻辑正确性.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @exception nc.vo.pub.ValidationException
	 *                如果验证失败,抛出 ValidationException,对错误进行解释.
	 */
	public void validate() throws ValidationException {

		ArrayList errFields = new ArrayList(); // errFields record those null

		// fields that cannot be null.
		// 检查是否为不允许空的字段赋了空值,你可能需要修改下面的提示信息:

		if (pk_contract_b == null) {
			errFields.add(new String("pk_contract_b"));
		}

		StringBuffer message = new StringBuffer();
		message.append("下列字段不能为空:");
		if (errFields.size() > 0) {
			String[] temp = (String[]) errFields.toArray(new String[0]);
			message.append(temp[0]);
			for (int i = 1; i < temp.length; i++) {
				message.append(",");
				message.append(temp[i]);
			}
			throw new NullFieldException(message.toString());
		}
	}

	/**
	 * <p>
	 * 取得父VO主键字段.
	 * <p>
	 * 创建日期:2013-10-14
	 * 
	 * @return java.lang.String
	 */
	public java.lang.String getParentPKFieldName() {

		return "pk_contract";

	}

	/**
	 * <p>
	 * 取得表主键.
	 * <p>
	 * 创建日期:2013-10-14
	 * 
	 * @return java.lang.String
	 */
	public java.lang.String getPKFieldName() {
		return "pk_contract_b";
	}

	/**
	 * <p>
	 * 返回表名称.
	 * <p>
	 * 创建日期:2013-10-14
	 * 
	 * @return java.lang.String
	 */
	public java.lang.String getTableName() {

		return "dh_contract_b";
	}

	/**
	 * 按照默认方式创建构造子.
	 * 
	 * 创建日期:2013-10-14
	 */
	public DhContractBVO() {

		super();
	}

	/**
	 * 使用主键进行初始化的构造子.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @param newPk_contract_b
	 *            主键值
	 */
	public DhContractBVO(String newPk_contract_b) {

		// 为主键字段赋值:
		pk_contract_b = newPk_contract_b;

	}

	/**
	 * 返回对象标识,用来唯一定位对象.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @return String
	 */
	public String getPrimaryKey() {

		return pk_contract_b;

	}

	/**
	 * 设置对象标识,用来唯一定位对象.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @param newPk_contract_b
	 *            String
	 */
	public void setPrimaryKey(String newPk_contract_b) {

		pk_contract_b = newPk_contract_b;

	}

	/**
	 * 返回数值对象的显示名称.
	 * 
	 * 创建日期:2013-10-14
	 * 
	 * @return java.lang.String 返回数值对象的显示名称.
	 */
	public String getEntityName() {

		return "dh_contract_b";

	}
}
