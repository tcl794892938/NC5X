  /***************************************************************\
  *     The skeleton of this class is generated by an automatic *
  * code generator for NC product. It is based on Velocity.     *
  \***************************************************************/
      	package nc.vo.dahuan.hkjh;
   	
	import java.util.ArrayList;
	import nc.vo.pub.*;
import nc.vo.pub.lang.*;
	
/**
 * <b> 在此处简要描述此类的功能 </b>
 *
 * <p>
 *     在此处添加此类的描述信息
 * </p>
 *
 * 创建日期:2014-9-25
 * @author author
 * @version Your Project 1.0
 */
     public class HkwhDVO extends SuperVO {
           
             public UFDate dbilldate;
             public String pk_contract;
             public UFDouble ct_amount;
             public String pk_hkwh;
             public String pk_cust;
             public String voperid;
             public String xmname;
             public String ctcode;
             public String pk_hkwh_d;
             public String ctname;
             public String pk_dept;
             
             public static final String  DBILLDATE="dbilldate";   
             public static final String  PK_CONTRACT="pk_contract";   
             public static final String  CT_AMOUNT="ct_amount";   
             public static final String  PK_HKWH="pk_hkwh";   
             public static final String  PK_CUST="pk_cust";   
             public static final String  VOPERID="voperid";   
             public static final String  XMNAME="xmname";   
             public static final String  CTCODE="ctcode";   
             public static final String  PK_HKWH_D="pk_hkwh_d";   
             public static final String  CTNAME="ctname";   
             public static final String  PK_DEPT="pk_dept";   
      
             
		/**
	   * 属性dbilldate的Getter方法.
	   *
	   * 创建日期:2014-9-25
	   * @return UFDate
	   */
	 public UFDate getDbilldate() {
		 return dbilldate;
	  }   
	  
     /**
	   * 属性dbilldate的Setter方法.
	   *
	   * 创建日期:2014-9-25
	   * @param newDbilldate UFDate
	   */
	public void setDbilldate(UFDate newDbilldate) {
		
		dbilldate = newDbilldate;
	 } 	  
       
        /**
	   * 属性pk_contract的Getter方法.
	   *
	   * 创建日期:2014-9-25
	   * @return String
	   */
	 public String getPk_contract() {
		 return pk_contract;
	  }   
	  
     /**
	   * 属性pk_contract的Setter方法.
	   *
	   * 创建日期:2014-9-25
	   * @param newPk_contract String
	   */
	public void setPk_contract(String newPk_contract) {
		
		pk_contract = newPk_contract;
	 } 	  
       
        /**
	   * 属性ct_amount的Getter方法.
	   *
	   * 创建日期:2014-9-25
	   * @return UFDouble
	   */
	 public UFDouble getCt_amount() {
		 return ct_amount;
	  }   
	  
     /**
	   * 属性ct_amount的Setter方法.
	   *
	   * 创建日期:2014-9-25
	   * @param newCt_amount UFDouble
	   */
	public void setCt_amount(UFDouble newCt_amount) {
		
		ct_amount = newCt_amount;
	 } 	  
       
        /**
	   * 属性pk_hkwh的Getter方法.
	   *
	   * 创建日期:2014-9-25
	   * @return String
	   */
	 public String getPk_hkwh() {
		 return pk_hkwh;
	  }   
	  
     /**
	   * 属性pk_hkwh的Setter方法.
	   *
	   * 创建日期:2014-9-25
	   * @param newpk_hkwh String
	   */
	public void setPk_hkwh(String newPk_hkwh) {
		
		pk_hkwh = newPk_hkwh;
	 } 	  
       
        /**
	   * 属性pk_cust的Getter方法.
	   *
	   * 创建日期:2014-9-25
	   * @return String
	   */
	 public String getPk_cust() {
		 return pk_cust;
	  }   
	  
     /**
	   * 属性pk_cust的Setter方法.
	   *
	   * 创建日期:2014-9-25
	   * @param newPk_cust String
	   */
	public void setPk_cust(String newPk_cust) {
		
		pk_cust = newPk_cust;
	 } 	  
       
        /**
	   * 属性voperid的Getter方法.
	   *
	   * 创建日期:2014-9-25
	   * @return String
	   */
	 public String getVoperid() {
		 return voperid;
	  }   
	  
     /**
	   * 属性voperid的Setter方法.
	   *
	   * 创建日期:2014-9-25
	   * @param newVoperid String
	   */
	public void setVoperid(String newVoperid) {
		
		voperid = newVoperid;
	 } 	  
       
        /**
	   * 属性xmname的Getter方法.
	   *
	   * 创建日期:2014-9-25
	   * @return String
	   */
	 public String getXmname() {
		 return xmname;
	  }   
	  
     /**
	   * 属性xmname的Setter方法.
	   *
	   * 创建日期:2014-9-25
	   * @param newXmname String
	   */
	public void setXmname(String newXmname) {
		
		xmname = newXmname;
	 } 	  
       
        /**
	   * 属性ctcode的Getter方法.
	   *
	   * 创建日期:2014-9-25
	   * @return String
	   */
	 public String getCtcode() {
		 return ctcode;
	  }   
	  
     /**
	   * 属性ctcode的Setter方法.
	   *
	   * 创建日期:2014-9-25
	   * @param newCtcode String
	   */
	public void setCtcode(String newCtcode) {
		
		ctcode = newCtcode;
	 } 	  
       
        /**
	   * 属性pk_hkwh_d的Getter方法.
	   *
	   * 创建日期:2014-9-25
	   * @return String
	   */
	 public String getPk_hkwh_d() {
		 return pk_hkwh_d;
	  }   
	  
     /**
	   * 属性pk_hkwh_d的Setter方法.
	   *
	   * 创建日期:2014-9-25
	   * @param newpk_hkwh_d String
	   */
	public void setPk_hkwh_d(String newpk_hkwh_d) {
		
		pk_hkwh_d = newpk_hkwh_d;
	 } 	  
       
        /**
	   * 属性ctname的Getter方法.
	   *
	   * 创建日期:2014-9-25
	   * @return String
	   */
	 public String getCtname() {
		 return ctname;
	  }   
	  
     /**
	   * 属性ctname的Setter方法.
	   *
	   * 创建日期:2014-9-25
	   * @param newCtname String
	   */
	public void setCtname(String newCtname) {
		
		ctname = newCtname;
	 } 	  
       
        /**
	   * 属性pk_dept的Getter方法.
	   *
	   * 创建日期:2014-9-25
	   * @return String
	   */
	 public String getPk_dept() {
		 return pk_dept;
	  }   
	  
     /**
	   * 属性pk_dept的Setter方法.
	   *
	   * 创建日期:2014-9-25
	   * @param newPk_dept String
	   */
	public void setPk_dept(String newPk_dept) {
		
		pk_dept = newPk_dept;
	 } 	  
       
       
    /**
	  * 验证对象各属性之间的数据逻辑正确性.
	  *
	  * 创建日期:2014-9-25
	  * @exception nc.vo.pub.ValidationException 如果验证失败,抛出
	  * ValidationException,对错误进行解释.
	 */
	 public void validate() throws ValidationException {
	
	 	ArrayList errFields = new ArrayList(); // errFields record those null

                                                      // fields that cannot be null.
       		  // 检查是否为不允许空的字段赋了空值,你可能需要修改下面的提示信息:
	
	   		if (pk_hkwh_d == null) {
			errFields.add(new String("pk_hkwh_d"));
			  }	
	   	
	    StringBuffer message = new StringBuffer();
		message.append("下列字段不能为空:");
		if (errFields.size() > 0) {
		String[] temp = (String[]) errFields.toArray(new String[0]);
		message.append(temp[0]);
		for ( int i= 1; i < temp.length; i++ ) {
			message.append(",");
			message.append(temp[i]);
		}
		throw new NullFieldException(message.toString());
		}
	 }
			   
       
   	/**
	  * <p>取得父VO主键字段.
	  * <p>
	  * 创建日期:2014-9-25
	  * @return java.lang.String
	  */
	public java.lang.String getParentPKFieldName() {
	  	 
	 	    return "pk_hkwh";
	 	
	}   
    
    /**
	  * <p>取得表主键.
	  * <p>
	  * 创建日期:2014-9-25
	  * @return java.lang.String
	  */
	public java.lang.String getPKFieldName() {
	 	  return "pk_hkwh_d";
	 	}
    
	/**
      * <p>返回表名称.
	  * <p>
	  * 创建日期:2014-9-25
	  * @return java.lang.String
	 */
	public java.lang.String getTableName() {
				
		return "dh_hkwh_d";
	}    
    
    /**
	  * 按照默认方式创建构造子.
	  *
	  * 创建日期:2014-9-25
	  */
	public HkwhDVO() {
			
			   super();	
	  }    
    
            /**
	 * 使用主键进行初始化的构造子.
	 *
	 * 创建日期:2014-9-25
	 * @param newpk_hkwh_d 主键值
	 */
	 public HkwhDVO(String newpk_hkwh_d) {
		
		// 为主键字段赋值:
		 pk_hkwh_d = newpk_hkwh_d;
	
    	}
    
     
     /**
	  * 返回对象标识,用来唯一定位对象.
	  *
	  * 创建日期:2014-9-25
	  * @return String
	  */
	   public String getPrimaryKey() {
				
		 return pk_hkwh_d;
	   
	   }

     /**
	  * 设置对象标识,用来唯一定位对象.
	  *
	  * 创建日期:2014-9-25
	  * @param newpk_hkwh_d  String    
	  */
	 public void setPrimaryKey(String newpk_hkwh_d) {
				
				pk_hkwh_d = newpk_hkwh_d; 
				
	 } 
           
	  /**
       * 返回数值对象的显示名称.
	   *
	   * 创建日期:2014-9-25
	   * @return java.lang.String 返回数值对象的显示名称.
	   */
	 public String getEntityName() {
				
	   return "dh_hkwh_d"; 
				
	 } 
} 
