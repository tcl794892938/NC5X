  /***************************************************************\
  *     The skeleton of this class is generated by an automatic *
  * code generator for NC product. It is based on Velocity.     *
  \***************************************************************/
      	package nc.vo.dahuan.htfilemodel;
   	
	import java.util.ArrayList;
	import nc.vo.pub.*;
	import nc.vo.pub.lang.*;
	
/**
 * <b> 在此处简要描述此类的功能 </b>
 *
 * <p>
 *     在此处添加此类的描述信息
 * </p>
 *
 * 创建日期:2014-3-5
 * @author ${vmObject.author}
 * @version Your Project 1.0
 */
     public class DhFjhtmbVO extends SuperVO {
           
             public String pk_htfj;
            
             public static final String  PK_HTFJ="pk_htfj";   
      
    
        /**
	   * 属性pk_htfj的Getter方法.
	   *
	   * 创建日期:2014-3-5
	   * @return String
	   */
	 public String getPk_htfj() {
		 return pk_htfj;
	  }   
	  
     /**
	   * 属性pk_htfj的Setter方法.
	   *
	   * 创建日期:2014-3-5
	   * @param newPk_htfj String
	   */
	public void setPk_htfj(String newPk_htfj) {
		
		pk_htfj = newPk_htfj;
	 } 	  
       
       
    /**
	  * 验证对象各属性之间的数据逻辑正确性.
	  *
	  * 创建日期:2014-3-5
	  * @exception nc.vo.pub.ValidationException 如果验证失败,抛出
	  * ValidationException,对错误进行解释.
	 */
	 public void validate() throws ValidationException {
	
	 	ArrayList errFields = new ArrayList(); // errFields record those null

                                                      // fields that cannot be null.
       		  // 检查是否为不允许空的字段赋了空值,你可能需要修改下面的提示信息:
	
	   	
	    StringBuffer message = new StringBuffer();
		message.append("下列字段不能为空:");
		if (errFields.size() > 0) {
		String[] temp = (String[]) errFields.toArray(new String[0]);
		message.append(temp[0]);
		for ( int i= 1; i < temp.length; i++ ) {
			message.append(",");
			message.append(temp[i]);
		}
		throw new NullFieldException(message.toString());
		}
	 }
			   
       
   	/**
	  * <p>取得父VO主键字段.
	  * <p>
	  * 创建日期:2014-3-5
	  * @return java.lang.String
	  */
	public java.lang.String getParentPKFieldName() {
	  	 
	 	    return null;
	 	
	}   
    
    /**
	  * <p>取得表主键.
	  * <p>
	  * 创建日期:2014-3-5
	  * @return java.lang.String
	  */
	public java.lang.String getPKFieldName() {
	 	  return null;
	 	}
    
	/**
      * <p>返回表名称.
	  * <p>
	  * 创建日期:2014-3-5
	  * @return java.lang.String
	 */
	public java.lang.String getTableName() {
				
		return "dh_fjhtmb";
	}    
    
    /**
	  * 按照默认方式创建构造子.
	  *
	  * 创建日期:2014-3-5
	  */
	public DhFjhtmbVO() {
			
			   super();	
	  }    
    
           
	  /**
       * 返回数值对象的显示名称.
	   *
	   * 创建日期:2014-3-5
	   * @return java.lang.String 返回数值对象的显示名称.
	   */
	 public String getEntityName() {
				
	   return "dh_fjhtmb"; 
				
	 } 
} 
