  /***************************************************************\
  *     The skeleton of this class is generated by an automatic *
  * code generator for NC product. It is based on Velocity.     *
  \***************************************************************/
      	package nc.vo.dahuan.htinfo.htchange;
   	
	import java.util.ArrayList;
	import nc.vo.pub.*;
	import nc.vo.pub.lang.*;
	
/**
 * <b> 在此处简要描述此类的功能 </b>
 *
 * <p>
 *     在此处添加此类的描述信息
 * </p>
 *
 * 创建日期:2014-3-31
 * @author author
 * @version Your Project 1.0
 */
     public class HtChangeDtlEntity extends SuperVO {
           
             public UFDouble pdu_amount;
             public UFDouble pdu_num;
             public String pdu_name;
             public String pk_conchange_d;
             public String pdu_stylemodel;
             public String pk_pdu;
             public UFDate delivery_date;
             public String meadoc_name;
             public String pdu_no;
             public String vemo;
             public UFDouble pdu_piece;
             public String pk_conchange;
            
             public static final String  PDU_AMOUNT="pdu_amount";   
             public static final String  PDU_NUM="pdu_num";   
             public static final String  PDU_NAME="pdu_name";   
             public static final String  PK_CONCHANGE_D="pk_conchange_d";   
             public static final String  PDU_STYLEMODEL="pdu_stylemodel";   
             public static final String  PK_PDU="pk_pdu";   
             public static final String  DELIVERY_DATE="delivery_date";   
             public static final String  MEADOC_NAME="meadoc_name";   
             public static final String  PDU_NO="pdu_no";   
             public static final String  VEMO="vemo";   
             public static final String  PDU_PIECE="pdu_piece";   
             public static final String  PK_CONCHANGE="pk_conchange";   
      
    
        /**
	   * 属性pdu_amount的Getter方法.
	   *
	   * 创建日期:2014-3-31
	   * @return UFDouble
	   */
	 public UFDouble getPdu_amount() {
		 return pdu_amount;
	  }   
	  
     /**
	   * 属性pdu_amount的Setter方法.
	   *
	   * 创建日期:2014-3-31
	   * @param newPdu_amount UFDouble
	   */
	public void setPdu_amount(UFDouble newPdu_amount) {
		
		pdu_amount = newPdu_amount;
	 } 	  
       
        /**
	   * 属性pdu_num的Getter方法.
	   *
	   * 创建日期:2014-3-31
	   * @return UFDouble
	   */
	 public UFDouble getPdu_num() {
		 return pdu_num;
	  }   
	  
     /**
	   * 属性pdu_num的Setter方法.
	   *
	   * 创建日期:2014-3-31
	   * @param newPdu_num UFDouble
	   */
	public void setPdu_num(UFDouble newPdu_num) {
		
		pdu_num = newPdu_num;
	 } 	  
       
        /**
	   * 属性pdu_name的Getter方法.
	   *
	   * 创建日期:2014-3-31
	   * @return String
	   */
	 public String getPdu_name() {
		 return pdu_name;
	  }   
	  
     /**
	   * 属性pdu_name的Setter方法.
	   *
	   * 创建日期:2014-3-31
	   * @param newPdu_name String
	   */
	public void setPdu_name(String newPdu_name) {
		
		pdu_name = newPdu_name;
	 } 	  
       
        /**
	   * 属性pk_conchange_d的Getter方法.
	   *
	   * 创建日期:2014-3-31
	   * @return String
	   */
	 public String getPk_conchange_d() {
		 return pk_conchange_d;
	  }   
	  
     /**
	   * 属性pk_conchange_d的Setter方法.
	   *
	   * 创建日期:2014-3-31
	   * @param newPk_conchange_d String
	   */
	public void setPk_conchange_d(String newPk_conchange_d) {
		
		pk_conchange_d = newPk_conchange_d;
	 } 	  
       
        /**
	   * 属性pdu_stylemodel的Getter方法.
	   *
	   * 创建日期:2014-3-31
	   * @return String
	   */
	 public String getPdu_stylemodel() {
		 return pdu_stylemodel;
	  }   
	  
     /**
	   * 属性pdu_stylemodel的Setter方法.
	   *
	   * 创建日期:2014-3-31
	   * @param newPdu_stylemodel String
	   */
	public void setPdu_stylemodel(String newPdu_stylemodel) {
		
		pdu_stylemodel = newPdu_stylemodel;
	 } 	  
       
        /**
	   * 属性pk_pdu的Getter方法.
	   *
	   * 创建日期:2014-3-31
	   * @return String
	   */
	 public String getPk_pdu() {
		 return pk_pdu;
	  }   
	  
     /**
	   * 属性pk_pdu的Setter方法.
	   *
	   * 创建日期:2014-3-31
	   * @param newPk_pdu String
	   */
	public void setPk_pdu(String newPk_pdu) {
		
		pk_pdu = newPk_pdu;
	 } 	  
       
        /**
	   * 属性delivery_date的Getter方法.
	   *
	   * 创建日期:2014-3-31
	   * @return UFDate
	   */
	 public UFDate getDelivery_date() {
		 return delivery_date;
	  }   
	  
     /**
	   * 属性delivery_date的Setter方法.
	   *
	   * 创建日期:2014-3-31
	   * @param newDelivery_date UFDate
	   */
	public void setDelivery_date(UFDate newDelivery_date) {
		
		delivery_date = newDelivery_date;
	 } 	  
       
        /**
	   * 属性meadoc_name的Getter方法.
	   *
	   * 创建日期:2014-3-31
	   * @return String
	   */
	 public String getMeadoc_name() {
		 return meadoc_name;
	  }   
	  
     /**
	   * 属性meadoc_name的Setter方法.
	   *
	   * 创建日期:2014-3-31
	   * @param newMeadoc_name String
	   */
	public void setMeadoc_name(String newMeadoc_name) {
		
		meadoc_name = newMeadoc_name;
	 } 	  
       
        /**
	   * 属性pdu_no的Getter方法.
	   *
	   * 创建日期:2014-3-31
	   * @return String
	   */
	 public String getPdu_no() {
		 return pdu_no;
	  }   
	  
     /**
	   * 属性pdu_no的Setter方法.
	   *
	   * 创建日期:2014-3-31
	   * @param newPdu_no String
	   */
	public void setPdu_no(String newPdu_no) {
		
		pdu_no = newPdu_no;
	 } 	  
       
        /**
	   * 属性vemo的Getter方法.
	   *
	   * 创建日期:2014-3-31
	   * @return String
	   */
	 public String getVemo() {
		 return vemo;
	  }   
	  
     /**
	   * 属性vemo的Setter方法.
	   *
	   * 创建日期:2014-3-31
	   * @param newVemo String
	   */
	public void setVemo(String newVemo) {
		
		vemo = newVemo;
	 } 	  
       
        /**
	   * 属性pdu_piece的Getter方法.
	   *
	   * 创建日期:2014-3-31
	   * @return UFDouble
	   */
	 public UFDouble getPdu_piece() {
		 return pdu_piece;
	  }   
	  
     /**
	   * 属性pdu_piece的Setter方法.
	   *
	   * 创建日期:2014-3-31
	   * @param newPdu_piece UFDouble
	   */
	public void setPdu_piece(UFDouble newPdu_piece) {
		
		pdu_piece = newPdu_piece;
	 } 	  
       
        /**
	   * 属性pk_conchange的Getter方法.
	   *
	   * 创建日期:2014-3-31
	   * @return String
	   */
	 public String getPk_conchange() {
		 return pk_conchange;
	  }   
	  
     /**
	   * 属性pk_conchange的Setter方法.
	   *
	   * 创建日期:2014-3-31
	   * @param newPk_conchange String
	   */
	public void setPk_conchange(String newPk_conchange) {
		
		pk_conchange = newPk_conchange;
	 } 	  
       
       
    /**
	  * 验证对象各属性之间的数据逻辑正确性.
	  *
	  * 创建日期:2014-3-31
	  * @exception nc.vo.pub.ValidationException 如果验证失败,抛出
	  * ValidationException,对错误进行解释.
	 */
	 public void validate() throws ValidationException {
	
	 	ArrayList errFields = new ArrayList(); // errFields record those null

                                                      // fields that cannot be null.
       		  // 检查是否为不允许空的字段赋了空值,你可能需要修改下面的提示信息:
	
	   		if (pk_conchange_d == null) {
			errFields.add(new String("pk_conchange_d"));
			  }	
	   	
	    StringBuffer message = new StringBuffer();
		message.append("下列字段不能为空:");
		if (errFields.size() > 0) {
		String[] temp = (String[]) errFields.toArray(new String[0]);
		message.append(temp[0]);
		for ( int i= 1; i < temp.length; i++ ) {
			message.append(",");
			message.append(temp[i]);
		}
		throw new NullFieldException(message.toString());
		}
	 }
			   
       
   	/**
	  * <p>取得父VO主键字段.
	  * <p>
	  * 创建日期:2014-3-31
	  * @return java.lang.String
	  */
	public java.lang.String getParentPKFieldName() {
	  	 
	 		return "pk_conchange";
	 	
	}   
    
    /**
	  * <p>取得表主键.
	  * <p>
	  * 创建日期:2014-3-31
	  * @return java.lang.String
	  */
	public java.lang.String getPKFieldName() {
	 	  return "pk_conchange_d";
	 	}
    
	/**
      * <p>返回表名称.
	  * <p>
	  * 创建日期:2014-3-31
	  * @return java.lang.String
	 */
	public java.lang.String getTableName() {
				
		return "dh_conchange_d";
	}    
    
    /**
	  * 按照默认方式创建构造子.
	  *
	  * 创建日期:2014-3-31
	  */
	public HtChangeDtlEntity() {
			
			   super();	
	  }    
    
            /**
	 * 使用主键进行初始化的构造子.
	 *
	 * 创建日期:2014-3-31
	 * @param newPk_conchange_d 主键值
	 */
	 public HtChangeDtlEntity(String newPk_conchange_d) {
		
		// 为主键字段赋值:
		 pk_conchange_d = newPk_conchange_d;
	
    	}
    
     
     /**
	  * 返回对象标识,用来唯一定位对象.
	  *
	  * 创建日期:2014-3-31
	  * @return String
	  */
	   public String getPrimaryKey() {
				
		 return pk_conchange_d;
	   
	   }

     /**
	  * 设置对象标识,用来唯一定位对象.
	  *
	  * 创建日期:2014-3-31
	  * @param newPk_conchange_d  String    
	  */
	 public void setPrimaryKey(String newPk_conchange_d) {
				
				pk_conchange_d = newPk_conchange_d; 
				
	 } 
           
	  /**
       * 返回数值对象的显示名称.
	   *
	   * 创建日期:2014-3-31
	   * @return java.lang.String 返回数值对象的显示名称.
	   */
	 public String getEntityName() {
				
	   return "dh_conchange_d"; 
				
	 } 
} 
